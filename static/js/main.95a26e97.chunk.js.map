{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEe,SAASA,EAAYC,GAAQ,IAEpCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAGJ,OACI,6BACI,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,4BAAQI,MAAON,EAAkBO,SAAUN,GACtCF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQH,MAAOG,GAA5B,IAAsCA,EAAtC,UCZpB,IAAME,EAAW,yCAwEFC,MAtEf,WAAgB,IAQVC,EAAUC,EARD,EACgCC,mBAAS,IADzC,mBACPhB,EADO,KACUiB,EADV,OAE2BD,mBAAS,IAFpC,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNZ,EALM,KAKEoB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KAgDb,OAvCID,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAGxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE1C,CAACF,EAAcE,IAchB,oCACA,uCACA,kBAACtB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAoC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAOhC,QAChDJ,eAlBJ,SAAgCmC,GAC9Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,IAiBtBtB,OAAQW,IAEV,yBAAKT,UAAU,UAAf,KACA,kBAACR,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAoC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOhC,QAC9CJ,eArBJ,SAA8BmC,GAC5Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,IAoBtBtB,OAAQU,MClEd0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.95a26e97.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n    const{\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        onChangeAmount,\r\n        amount\r\n    } = props\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\r\n            <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n                {currencyOptions.map(option => (\r\n                    <option key={option} value={option}> {option} </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport CurrencyRow from './CurrencyRow';\r\n\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\r\n\r\nfunction App() {\r\n  const[currencyOptions, setCurrencyOptions] = useState([])\r\n  const [fromCurrency, setFromCurrency] = useState([])\r\n  const [toCurrency, setToCurrency] = useState()\r\n  const [exchangeRate, setExchangeRate] = useState()\r\n  const [amount, setAmount] = useState(1)\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n  let toAmount, fromAmount\r\n  if (amountInFromCurrency){\r\n    fromAmount = amount\r\n    toAmount = amount * exchangeRate\r\n  } else {\r\n    toAmount = amount\r\n    fromAmount = amount / exchangeRate\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(BASE_URL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const firstCurrency = Object.keys(data.rates)[0]\r\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\r\n        setFromCurrency(data.base)\r\n        setToCurrency(firstCurrency)\r\n        setExchangeRate(data.rates[firstCurrency])\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n      .then(res => res.json())\r\n      .then(data => setExchangeRate(data.rates[toCurrency]))\r\n    }\r\n  }, [fromCurrency, toCurrency])\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(true)\r\n  }\r\n\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1>Convert</h1>\r\n    <CurrencyRow\r\n      currencyOptions={currencyOptions}\r\n      selectedCurrency={fromCurrency}\r\n      onChangeCurrency={e => setFromCurrency(e.target.value)}\r\n      onChangeAmount={handleFromAmountChange}\r\n      amount={fromAmount}\r\n    />\r\n    <div className=\"equals\">=</div>\r\n    <CurrencyRow\r\n      currencyOptions={currencyOptions}\r\n      selectedCurrency={toCurrency}\r\n      onChangeCurrency={e => setToCurrency(e.target.value)}\r\n      onChangeAmount={handleToAmountChange}\r\n      amount={toAmount}\r\n    />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}